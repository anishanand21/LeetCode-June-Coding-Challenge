/*
Given an integer, write a function to determine if it is a power of two.

Example 1:
Input: 1
Output: true 
Explanation: 20 = 1

Example 2:
Input: 16
Output: true
Explanation: 24 = 16

Example 3:
Input: 218
Output: false
*/


class Solution {
public:
    bool isPowerOfTwo(int n) {
        return n > 0 && ((n & (n-1)) == 0);
    }
};

Bit Manipulation
If we write numbers in binary representation than all numbers of power two will only have 1 set bit which MSB

n = 1 - 0001   n - 1 = 0 - 0000 n & n - 1 => 0000 = 0
n = 2 - 0010   n - 1 = 1 - 0001 n & n - 1 => 0000 = 0
n = 3 - 0011   n - 1 = 2 - 0010 n & n - 1 => 0010 = 2
n = 4 - 0100   n - 1 = 3 - 0011 n & n - 1 => 0000 = 0
n = 8 - 1000   n - 1 = 7 - 0111 n & n - 1 => 0000 = 0
