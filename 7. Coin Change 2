/*
You are given coins of different denominations and a total amount of money. Write a function to compute the number of combinations that make up that amount. You may assume that you have infinite number of each kind of coin.

Example 1:

Input: amount = 5, coins = [1, 2, 5]
Output: 4
Explanation: there are four ways to make up the amount:
5=5
5=2+2+1
5=2+1+1+1
5=1+1+1+1+1
*/

class Solution {
public:
    int change(int amount, vector<int>& coins) {
        int n = coins.size();
        int ans[n + 1][amount + 1];
        for(int i=0 ; i <= n; i++) {
            ans[i][0] = 1;
        }
        
        for(int i=1 ; i<= amount ; i++) {
            ans[0][i] = 0;
        }
        
        for(int i=1 ; i <= n; i++) {
            for(int j = 1 ; j<= amount ; j++) {
                if(j >= coins[i-1])
                    ans[i][j] = ans[i-1][j] + ans[i][j - coins[i-1]];
                else
                    ans[i][j] = ans[i-1][j];
            }
        }
        return ans[n][amount];
        
    }
};
